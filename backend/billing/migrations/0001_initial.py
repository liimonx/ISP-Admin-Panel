# Generated by Django 4.2.7 on 2025-09-01 14:48

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customers', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BillingCycle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cycle_number', models.PositiveIntegerField(help_text='Billing cycle number')),
                ('start_date', models.DateField(help_text='Billing cycle start date')),
                ('end_date', models.DateField(help_text='Billing cycle end date')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended')], default='active', help_text='Billing cycle status', max_length=20)),
                ('base_amount', models.DecimalField(decimal_places=2, help_text='Base amount for this cycle', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Total amount for this cycle', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('notes', models.TextField(blank=True, help_text='Additional notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Billing Cycle',
                'verbose_name_plural': 'Billing Cycles',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(help_text='Unique invoice number', max_length=50, unique=True)),
                ('invoice_type', models.CharField(choices=[('monthly', 'Monthly'), ('setup', 'Setup Fee'), ('adjustment', 'Adjustment'), ('other', 'Other')], default='monthly', help_text='Type of invoice', max_length=20)),
                ('billing_period_start', models.DateField(help_text='Billing period start date')),
                ('billing_period_end', models.DateField(help_text='Billing period end date')),
                ('subtotal', models.DecimalField(decimal_places=2, help_text='Subtotal amount', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Tax amount', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('discount_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Discount amount', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Total amount', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('paid_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Amount paid', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending'), ('paid', 'Paid'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled')], default='draft', help_text='Invoice status', max_length=20)),
                ('issue_date', models.DateField(auto_now_add=True, help_text='Invoice issue date')),
                ('due_date', models.DateField(help_text='Payment due date')),
                ('paid_date', models.DateTimeField(blank=True, help_text='Date when invoice was paid', null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(help_text='Customer for this invoice', on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='customers.customer')),
            ],
            options={
                'verbose_name': 'Invoice',
                'verbose_name_plural': 'Invoices',
                'ordering': ['-issue_date'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_number', models.CharField(help_text='Unique payment number', max_length=50, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Payment amount', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('bank_transfer', 'Bank Transfer'), ('bkash', 'bKash'), ('nagad', 'Nagad'), ('rocket', 'Rocket'), ('sslcommerz', 'SSLCommerz'), ('stripe', 'Stripe'), ('other', 'Other')], help_text='Payment method', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', help_text='Payment status', max_length=20)),
                ('payment_date', models.DateTimeField(blank=True, help_text='Date when payment was made', null=True)),
                ('external_id', models.CharField(blank=True, help_text='External payment ID from payment provider', max_length=100)),
                ('transaction_id', models.CharField(blank=True, help_text='Transaction ID from payment provider', max_length=100)),
                ('notes', models.TextField(blank=True, help_text='Additional notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(help_text='Customer for this payment', on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='customers.customer')),
                ('invoice', models.ForeignKey(help_text='Invoice for this payment', on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='billing.invoice')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'ordering': ['-created_at'],
            },
        ),
    ]
