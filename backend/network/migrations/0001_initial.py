# Generated by Django 4.2.7 on 2025-09-02 12:05

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Router',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Router name', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Router description')),
                ('router_type', models.CharField(choices=[('mikrotik', 'MikroTik'), ('cisco', 'Cisco'), ('other', 'Other')], default='mikrotik', help_text='Router type', max_length=20)),
                ('host', models.GenericIPAddressField(help_text='Router IP address')),
                ('api_port', models.IntegerField(default=8729, help_text='API port (8729 for MikroTik)')),
                ('ssh_port', models.IntegerField(default=22, help_text='SSH port')),
                ('username', models.CharField(help_text='Router username', max_length=100)),
                ('password', models.CharField(help_text='Router password', max_length=100)),
                ('use_tls', models.BooleanField(default=True, help_text='Use TLS for API connection')),
                ('status', models.CharField(choices=[('online', 'Online'), ('offline', 'Offline'), ('maintenance', 'Maintenance')], default='offline', help_text='Router status', max_length=20)),
                ('last_seen', models.DateTimeField(blank=True, help_text='Last time router was online', null=True)),
                ('location', models.CharField(blank=True, help_text='Router location', max_length=255)),
                ('coordinates', models.CharField(blank=True, help_text='GPS coordinates (lat,lng)', max_length=50)),
                ('snmp_community', models.CharField(default='public', help_text='SNMP community string', max_length=100)),
                ('snmp_port', models.IntegerField(default=161, help_text='SNMP port')),
                ('notes', models.TextField(blank=True, help_text='Additional notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Router',
                'verbose_name_plural': 'Routers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RouterSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(help_text='Session username', max_length=100)),
                ('ip_address', models.GenericIPAddressField(help_text='Session IP address')),
                ('mac_address', models.CharField(blank=True, help_text='Session MAC address', max_length=17, null=True)),
                ('session_id', models.CharField(help_text='Router session ID', max_length=100)),
                ('bytes_in', models.BigIntegerField(default=0, help_text='Bytes received')),
                ('bytes_out', models.BigIntegerField(default=0, help_text='Bytes sent')),
                ('uptime', models.DurationField(blank=True, help_text='Session uptime', null=True)),
                ('started_at', models.DateTimeField(auto_now_add=True, help_text='Session start time')),
                ('last_seen', models.DateTimeField(auto_now=True, help_text='Last activity time')),
                ('router', models.ForeignKey(help_text='Router for this session', on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='network.router')),
            ],
            options={
                'verbose_name': 'Router Session',
                'verbose_name_plural': 'Router Sessions',
                'ordering': ['-started_at'],
            },
        ),
        migrations.AddIndex(
            model_name='router',
            index=models.Index(fields=['host'], name='network_rou_host_906fbd_idx'),
        ),
        migrations.AddIndex(
            model_name='router',
            index=models.Index(fields=['status'], name='network_rou_status_ebb1f2_idx'),
        ),
        migrations.AddIndex(
            model_name='router',
            index=models.Index(fields=['router_type'], name='network_rou_router__eda043_idx'),
        ),
        migrations.AddIndex(
            model_name='router',
            index=models.Index(fields=['created_at'], name='network_rou_created_f37064_idx'),
        ),
        migrations.AddIndex(
            model_name='routersession',
            index=models.Index(fields=['router'], name='network_rou_router__82ce49_idx'),
        ),
        migrations.AddIndex(
            model_name='routersession',
            index=models.Index(fields=['username'], name='network_rou_usernam_1c69f3_idx'),
        ),
        migrations.AddIndex(
            model_name='routersession',
            index=models.Index(fields=['ip_address'], name='network_rou_ip_addr_710742_idx'),
        ),
        migrations.AddIndex(
            model_name='routersession',
            index=models.Index(fields=['started_at'], name='network_rou_started_798a9f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='routersession',
            unique_together={('router', 'session_id')},
        ),
    ]
